@page "/schools/{SchoolCode}/feedbacks"
@inject IJSRuntime Runtime
@inject NavigationManager NavManager
<NavBar />
<!-- Card Regular -->
<br />
<br />

@if (GlobalUser.UID == null)
{
    NavManager.NavigateTo("/signin");

}
@if (feeds != null)
{
    <div class="container">
        <h5>@school.Name</h5>
        <h6>@SchoolCode</h6>
        <address>@school.Address</address>
        <DataTable Searchable="true">
            <TableHolder ColumnNames="TableOption">
                @foreach (var feed in feeds)
                {
                    <TableItem>
                        <TableValue>@feed.Date</TableValue>
                        <TableValue>@usernames[feed.Id]</TableValue>
                        <TableValue><a href="/feedback/@feed.Id">View Feedback</a></TableValue>
                    </TableItem>
                }
            </TableHolder>
        </DataTable>
    </div>
}
else
{
    @if (firstrender)
    {
        <br />
        <p>Loading</p>
    }
    else
    {
        <br />
        <p>Failed to fetch profile data</p>
    }
}

@code
{
    [Parameter]
    public string SchoolCode { get; set; }

    private bool firstrender = true;
    private string[] TableOption = new string[] { "Date", "Submitted By", "Feedback" };
    private Schools school = null;
    private IDictionary<string, string> usernames = new Dictionary<string, string>();

    private List<Feedbacks> feeds = null;
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            LoadFeed();
        }
        else
        {
            firstrender = false;
        }
    }
    async void LoadFeed()
    {
        feeds = await DatabaseHelper.GetFeedbacks<List<Feedbacks>>(Runtime, "school_feedbacks/" + SchoolCode, 0);
        school = await DatabaseHelper.ReadData<Schools>(Runtime, "Schools/" + SchoolCode);
        foreach (var feed in feeds)
        {
            usernames.Add(feed.Id, await DatabaseHelper.ReadData<string>(Runtime, "Users/" + feed.SubmitterId + "/name"));
        }
        StateHasChanged();
    }
}
