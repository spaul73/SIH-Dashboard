@page "/schools"
@inject IJSRuntime Runtime
@inject NavigationManager NavManager
<NavBar />
<!-- Card Regular -->
<br />
<br />


@if (districtoptions != null)
{
    <div class="container" id="schoolcontainer">
        <h5 id="schoolh5">Schools</h5>
        <address id="schooladd">Select District</address>
        <select id="schoolsel" class="custom-select d-block w-100" style="max-width:200px; border-radius: 20px" value="@districtselected" @onchange="LoadDistrictSchools">
            <option value="">Select District</option>
   
            @foreach (string district in districtoptions)
            {
                <option value="@district">@district</option>
            }
        </select>
   
        @if (schools != null)
        {   
            <div id="schoolsecondcontainer">
            <DataTable Searchable="true">
                <TableHolder ColumnNames="@((GlobalUser.UID != null && GlobalUser.Role == Roles.Admin)?TableOption:TableOption.Take(11).ToArray())">
                    @foreach (var school in schools)
                    {
                    <TableItem>
                        <TableValue>@school.Id</TableValue>
                        <TableValue>@school.Name</TableValue>
                        <TableValue>@school.Address</TableValue>
                        <TableValue>@school.CategoryScores.Safety</TableValue>
                        <TableValue>@school.CategoryScores.Academics</TableValue>
                        <TableValue>@school.CategoryScores.Health</TableValue>
                        <TableValue>@school.CategoryScores.Discipline</TableValue>
                        <TableValue>@school.CategoryScores.Meals</TableValue>
                        <TableValue>@school.CategoryScores.Activities</TableValue>
                        <TableValue>@school.CategoryScores.All</TableValue>
                        <TableValue><a href="/schools/@school.Id/overview">View Overview</a></TableValue>
                        @if (GlobalUser.UID != null && GlobalUser.Role == Roles.Admin)
                        {<TableValue><a href="/schools/@school.Id/feedbacks">View Feedbacks</a></TableValue>}
                    </TableItem>
                    }
                </TableHolder>
            </DataTable>
            </div>
        }
  </div>   
}
 
else
{
    @if (firstrender)
    {
        <br />
        <p>Loading</p>
    }
    else
    {
        <br />
        <p>Failed to fetch profile data</p>
    }
}
@* ____________ *@


@* ______________ *@


@code {
    private bool firstrender = true;
    private string districtselected { get; set; } = null;
    private List<string> districtoptions = null;
    private string[] TableOption = new string[] { "Code", "Name", "Address","Safety", "Academics", "Health", "Discipline", "Meals", "Activities", "All", "View Overview", "Feedbacks" };
    private List<Schools> schools = null;
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            LoadDistricts();
        }
        else
        {
            firstrender = false;
        }
    }
    async void LoadDistricts()
    {
        districtoptions = await Runtime.InvokeAsync<List<string>>("GetIds", "Districts/", 0);
        StateHasChanged();
    }
    async void LoadDistrictSchools(ChangeEventArgs _)
    {
        districtselected = _.Value.ToString();
        schools = await DatabaseHelper.GetSchools<List<Schools>>(Runtime, "Districts/" + districtselected);
        StateHasChanged();
    }
}
